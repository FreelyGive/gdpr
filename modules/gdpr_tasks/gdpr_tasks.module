<?php

/**
 * @file
 * Module file for the GDPR Tasks module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;
use Drupal\file\FileInterface;
use Drupal\gdpr_tasks\Entity\TaskInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_toolbar().
 */
function gdpr_tasks_toolbar_alter(&$items) {
  $user = \Drupal::currentUser();

  if ($user->hasPermission('view gdpr tasks')) {
    // Root menu url.
    $items['gdpr']['tab']['#url'] = Url::fromRoute('gdpr_tasks.summary');

    $items['gdpr']['tray']['links']['#links']['summary'] = [
      'title' => t('Summary'),
      'url' => Url::fromRoute('gdpr_tasks.summary'),
      'attributes' => [
        'title' => t('GDPR Summary'),
      ],
      'weight' => 0,
    ];

    $items['gdpr']['tray']['links']['#links']['tasks'] = [
      'title' => t('Tasks'),
      'url' => Url::fromRoute('entity.gdpr_task.collection'),
      'attributes' => [
        'title' => t('GDPR Task list'),
      ],
    ];
  }
}

/**
 * Implements hook_theme().
 */
function gdpr_tasks_theme() {
  $theme = [];
  $theme['gdpr_task'] = [
    'render element' => 'elements',
    'file' => 'gdpr_tasks.pages.inc',
    'template' => 'gdpr_task',
  ];
  $theme['gdpr_task_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'gdpr_tasks.pages.inc',
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function gdpr_tasks_theme_suggestions_gdpr_task(array $variables) {
  $suggestions = [];
  /* @var \Drupal\gdpr_tasks\Entity\TaskInterface $entity */
  $entity = $variables['elements']['#gdpr_task'];
  $anonymized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'gdpr_task__' . $anonymized_view_mode;
  $suggestions[] = 'gdpr_task__' . $entity->bundle();
  $suggestions[] = 'gdpr_task__' . $entity->bundle() . '__' . $anonymized_view_mode;
  $suggestions[] = 'gdpr_task__' . $entity->id();
  $suggestions[] = 'gdpr_task__' . $entity->id() . '__' . $anonymized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_ENTITY_TYPE_access().
 */
function gdpr_tasks_file_access(FileInterface $file, $operation, AccountInterface $account) {
  if ('download' === $operation && $file->getOwnerId() === $account->id()) {
    return AccessResult::allowed();
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_entity_type_alter().
 *
 * Update entity definitions of certain entity types to be excluded from entity
 * traversal.
 */
function gdpr_fields_entity_type_alter(array &$entity_types) {
  /* @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  // Excluded entity types.
  $exlude_entity_types = [
    'gdpr_tasks',
  ];

  foreach ($exlude_entity_types as $type) {
    if (isset($entity_types[$type])) {
      $entity_types[$type]->set('gdpr_entity_traversal_exclude', TRUE);
    }
  }
}
